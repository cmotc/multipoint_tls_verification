#! /bin/sh
NUM_TESTS=3
SEEMS_SAFE=false
show_help(){
	echo "###===============---------------------------------===============###
		  ##   Multipoint TLS Certificate Checker:                           ##
		  #            Detect possible MITM attacks by obtaining TLS certs    #
		  ##     via Tor from multiple exit nodes.                           ##
		  ###===============---------------------------------===============###

		  Description: This program retrieves the TLS certificate belonging to
		  to the URL it is passed from a group of up to 5 different Tor exit
		  nodes in order to detect differences between them(Such as those that
		  might imply a Man-In-The-Middle Attack directed at a certain
		  geograpic area. It currently DOES NOT protect against MITM attacks
		  that specifically target traffic coming out of Tor exit nodes, but it
		  may soon by adding support for querying convergence.io notaries and
		  namecoin resolvers as well. Use with great caution and read the code!

			usage:
				-u The URL to test.
				-s The number of different Tor exit nodes to retrieve the cert
					through.
				-v Verbose Mode(Inactive.)
				-h Displays this help message.
"
	exit 0
}
compute_num_test(){
	TMP="$1"
	OUT=1
	if [ ! -z $TMP ]; then
		case "$TMP" in
			1)		OUT=1
			;;
			low)	OUT=1
			;;
			l)		OUT=1
			;;
			2)		OUT=2
			;;
			3)		OUT=3
			;;
			medium)	OUT=3
			;;
			m)		OUT=3
			;;
			4)		OUT=4
			;;
			5)		OUT=5
			;;
			high)	OUT=5
			;;
			h)		OUT=5
			;;
		esac
	else
		echo "option -s requires an argument. [1-5 or l, m, h or low, medium, high]"
		exit 1
	fi
	echo $OUT
}

#!/bin/bash
while getopts "h:u:s:v" arg; do
	case $arg in
		h) show_help
		;;
		u) 
			GET_URL="$OPTARG"
			echo $GET_URL 2>&1
		;;
		s) 
			NUM_TESTS=$(compute_num_tests "$OPTARG")
			echo $GET_URL 2>&1
		;;
		v) 
			VERBOSE="true"
			echo "Verbose Mode" 2>&1
		;;
	esac
done

TO_DIFF=""
LAST_RESULT="init"
LAST_TORIP=""
TRIM_STR_BEGIN='<html><head><title>Current IP Check</title></head><body>Current IP Address: '
TRIM_STR_END='</body></html>'
while [ $NUM_TESTS > 0 ]; do
	#First, get the IP addresses of the site you want to check and the IP
	#checking service.
	IP=$(tor-resolve $GET_URL)
	CHECK_IP=$(tor-resolve checkip.dyndns.com)
	#Check if this is the first time the loop has been run
	if [ "$LAST_RESULT" = "init" ]; then
		#Get an SSL Certificate over tor via torsocks
		SSL_RESULT=$(torsocks openssl s_client -connect "$IP:443" 2>&1)
		LAST_RESULT="$SSL_RESULT"
		LAST_TORIP=$(torsocks wget -q -O - "$CHECK_IP" | sed "s@$TRIM_STR_BEGIN@@" | sed "s@$TRIM_STR_END@@")
		echo "Current Tor IP address $LAST_TORIP"
	else
		#Get an SSL Certificate over tor via torsocks
		SSL_RESULT=$(torsocks openssl s_client -connect "$IP:443" 2>&1)
		#Create temp files to diff
		echo $SSL_RESULT > .tmp_certtest
		echo $LAST_RESULT > .tmp_lasttest
		#Diff the certs retrieved from the current and last exit node
		TEST_DIFF=$(diff .tmp_certtest .tmp_lasttest)
		if [ ! "$TEST_DIFF" = "" ]; then
			CUR_TORIP=$(torsocks wget -q -O - "$CHECK_IP" | sed "s@$TRIM_STR_BEGIN@@" | sed "s@$TRIM_STR_END@@")
			echo "Current Tor IP address $CUR_TORIP"
			echo "WARNING! A difference was detected between the TLS certificate
issued by $URL from $LAST_TORIP and $CUR_TORIP, implying that the certificate
is changing based on the location the site is being accessed from. Please review
the certificate and the meta-data surrounding how it was retrieved before using
it." 1>&2
			#Set SEEMS_SAFE false
			SEEMS_SAFE=false
		else
			#Cleanup the temp files
			rm .tmp_certtest .tmp_lasttest
			#Keep SEEMS_SAFE true
			SEEMS_SAFE=true
		fi
		#Set the next loop's LAST_RESULT
		LAST_RESULT="$SSL_RESULT"
	fi
	LAST_TORIP=$CUR_TORIP #$(torsocks curl $CHECK_IP | sed "s@$TRIM_STR_BEGIN@@" | sed "s@$TRIM_STR_END@@")
#	sudo service tor restart
	NUM_TESTS=$(expr $NUM_TESTS - 1)
done
echo $SEEMS_SAFE
